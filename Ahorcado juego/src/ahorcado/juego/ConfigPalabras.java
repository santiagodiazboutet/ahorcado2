/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ahorcado.juego;

import javax.swing.DefaultListModel;

/**
 *
 * @author Yo
 */

public class ConfigPalabras extends javax.swing.JFrame {

    /**
     * Creates new form ConfigPalabras
     */
    Diccionario dicc;
    Menu menu;
    DefaultListModel<String> model;
    boolean[] areYouSure;
    
    public ConfigPalabras(Menu menu) {
        this.menu=menu;
        initComponents();
        this.setLocationRelativeTo(null);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoDificultad = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        Borrar = new javax.swing.JButton();
        Modificar = new javax.swing.JButton();
        Agregar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaPalabras = new javax.swing.JList<>();
        guardar = new javax.swing.JButton();
        dificultadFacil = new javax.swing.JToggleButton();
        dificultadMedio = new javax.swing.JToggleButton();
        dificultadDificil = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setLocation(new java.awt.Point(180, 180));
        setResizable(false);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(153, 204, 204));

        jScrollPane1.setBorder(null);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane1.setHorizontalScrollBar(null);

        jTextArea1.setEditable(false);
        jTextArea1.setBackground(new java.awt.Color(153, 204, 204));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Lucida Console", 1, 20)); // NOI18N
        jTextArea1.setForeground(new java.awt.Color(51, 51, 51));
        jTextArea1.setRows(1);
        jTextArea1.setText("Administre las palabras de cada lista seleccionando la dificultad.");
        jTextArea1.setBorder(null);
        jTextArea1.setSelectedTextColor(new java.awt.Color(51, 51, 51));
        jTextArea1.setSelectionColor(new java.awt.Color(153, 204, 204));
        jScrollPane1.setViewportView(jTextArea1);

        Borrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ahorcado/juego/Recursos/boton_eliminar.png"))); // NOI18N
        Borrar.setBorder(null);
        Borrar.setBorderPainted(false);
        Borrar.setContentAreaFilled(false);
        Borrar.setRequestFocusEnabled(false);
        Borrar.setRolloverEnabled(true);
        Borrar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/ahorcado/juego/Recursos/boton_eliminar_hover.png"))); // NOI18N
        Borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BorrarActionPerformed(evt);
            }
        });

        Modificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ahorcado/juego/Recursos/boton_modificar.png"))); // NOI18N
        Modificar.setBorder(null);
        Modificar.setBorderPainted(false);
        Modificar.setContentAreaFilled(false);
        Modificar.setDefaultCapable(false);
        Modificar.setFocusPainted(false);
        Modificar.setFocusable(false);
        Modificar.setRolloverEnabled(true);
        Modificar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/ahorcado/juego/Recursos/boton_modificar_hover.png"))); // NOI18N
        Modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModificarActionPerformed(evt);
            }
        });

        Agregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ahorcado/juego/Recursos/boton_agregar.png"))); // NOI18N
        Agregar.setBorder(null);
        Agregar.setBorderPainted(false);
        Agregar.setContentAreaFilled(false);
        Agregar.setDefaultCapable(false);
        Agregar.setFocusPainted(false);
        Agregar.setFocusable(false);
        Agregar.setRequestFocusEnabled(false);
        Agregar.setRolloverEnabled(true);
        Agregar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/ahorcado/juego/Recursos/boton_agregar_hover.png"))); // NOI18N
        Agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarActionPerformed(evt);
            }
        });

        jScrollPane2.setBorder(null);

        listaPalabras.setBackground(new java.awt.Color(225, 225, 225));
        listaPalabras.setFont(new java.awt.Font("Lucida Console", 1, 12)); // NOI18N
        listaPalabras.setForeground(new java.awt.Color(51, 51, 51));
        jScrollPane2.setViewportView(listaPalabras);

        guardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ahorcado/juego/Recursos/boton_guardar cambios.png"))); // NOI18N
        guardar.setBorder(null);
        guardar.setBorderPainted(false);
        guardar.setContentAreaFilled(false);
        guardar.setDefaultCapable(false);
        guardar.setFocusPainted(false);
        guardar.setFocusable(false);
        guardar.setRequestFocusEnabled(false);
        guardar.setRolloverEnabled(true);
        guardar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/ahorcado/juego/Recursos/boton_guardar cambios_hover.png"))); // NOI18N
        guardar.setVerifyInputWhenFocusTarget(false);
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarActionPerformed(evt);
            }
        });

        grupoDificultad.add(dificultadFacil);
        dificultadFacil.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ahorcado/juego/Recursos/boton_facil.png"))); // NOI18N
        dificultadFacil.setBorder(null);
        dificultadFacil.setBorderPainted(false);
        dificultadFacil.setContentAreaFilled(false);
        dificultadFacil.setFocusPainted(false);
        dificultadFacil.setFocusable(false);
        dificultadFacil.setRequestFocusEnabled(false);
        dificultadFacil.setRolloverEnabled(true);
        dificultadFacil.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/ahorcado/juego/Recursos/boton_facil_hover.png"))); // NOI18N
        dificultadFacil.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/ahorcado/juego/Recursos/boton_facil_seleccionado.png"))); // NOI18N
        dificultadFacil.setVerifyInputWhenFocusTarget(false);
        dificultadFacil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dificultadFacilActionPerformed(evt);
            }
        });

        grupoDificultad.add(dificultadMedio);
        dificultadMedio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ahorcado/juego/Recursos/boton_medio.png"))); // NOI18N
        dificultadMedio.setBorder(null);
        dificultadMedio.setBorderPainted(false);
        dificultadMedio.setContentAreaFilled(false);
        dificultadMedio.setFocusPainted(false);
        dificultadMedio.setFocusable(false);
        dificultadMedio.setRequestFocusEnabled(false);
        dificultadMedio.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/ahorcado/juego/Recursos/boton_medio_hover.png"))); // NOI18N
        dificultadMedio.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/ahorcado/juego/Recursos/boton_medio_seleccionado.png"))); // NOI18N
        dificultadMedio.setVerifyInputWhenFocusTarget(false);
        dificultadMedio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dificultadMedioActionPerformed(evt);
            }
        });

        grupoDificultad.add(dificultadDificil);
        dificultadDificil.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ahorcado/juego/Recursos/boton_dificil.png"))); // NOI18N
        dificultadDificil.setBorder(null);
        dificultadDificil.setBorderPainted(false);
        dificultadDificil.setContentAreaFilled(false);
        dificultadDificil.setFocusPainted(false);
        dificultadDificil.setFocusable(false);
        dificultadDificil.setRequestFocusEnabled(false);
        dificultadDificil.setRolloverEnabled(true);
        dificultadDificil.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/ahorcado/juego/Recursos/boton_dificil_hover.png"))); // NOI18N
        dificultadDificil.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/ahorcado/juego/Recursos/boton_dificil_seleccionado.png"))); // NOI18N
        dificultadDificil.setVerifyInputWhenFocusTarget(false);
        dificultadDificil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dificultadDificilActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(100, 100, 100)
                                .addComponent(Agregar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Modificar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Borrar))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(dificultadMedio)
                                    .addComponent(dificultadFacil)
                                    .addComponent(dificultadDificil))
                                .addGap(70, 70, 70)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 859, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(26, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(guardar)
                .addGap(289, 289, 289))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(dificultadFacil)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(dificultadMedio)
                        .addGap(39, 39, 39)
                        .addComponent(dificultadDificil))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Agregar)
                    .addComponent(Modificar)
                    .addComponent(Borrar))
                .addGap(26, 26, 26)
                .addComponent(guardar)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void cargarLista(){
        this.model=new DefaultListModel<>();
        if(this.dicc!=null){
            
            
            for (Palabra Palabra : this.dicc.Palabras) {
                    this.model.addElement(Palabra.getPalabra());
            } 
            this.listaPalabras.setModel(model);
            this.listaPalabras.setVisible(true);
            this.listaPalabras.setSelectedIndex(0);
            
        }
    }
    
    
    
    
    private void BorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BorrarActionPerformed
        // TODO add your handling code here:
        if(this.dificultadDificil.isSelected()||this.dificultadFacil.isSelected()||this.dificultadMedio.isSelected())
        {
        this.dicc.Palabras.remove(this.listaPalabras.getSelectedIndex());
        for (Palabra Palabra1 : this.dicc.Palabras) {
            System.out.println(Palabra1.getPalabra());
        }
        this.model.remove(this.listaPalabras.getSelectedIndex());
        }
    }//GEN-LAST:event_BorrarActionPerformed

    private void ModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModificarActionPerformed
        // TODO add your handling code here:
        if(this.dificultadDificil.isSelected()||this.dificultadFacil.isSelected()||this.dificultadMedio.isSelected()){
        ModificarPalabra ventana=new ModificarPalabra(this , true, this.dicc.Palabras.get(this.listaPalabras.getSelectedIndex()));
        ventana.setVisible(true);
        }
      /*  */
        
    }//GEN-LAST:event_ModificarActionPerformed

    private void AgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarActionPerformed
        // TODO add your handling code here:
       if(this.dificultadDificil.isSelected()||this.dificultadFacil.isSelected()||this.dificultadMedio.isSelected()){
        ModificarPalabra ventana=new ModificarPalabra(this , true, this.dicc);
       
        ventana.setVisible(true);
       }
       
       
       
       
    }//GEN-LAST:event_AgregarActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        
        this.menu.setVisible(true);
    }//GEN-LAST:event_formWindowClosing

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        // TODO add your handling code here:
        int index=this.listaPalabras.getSelectedIndex();
        if(this.dicc!=null){
            
            this.model.removeAllElements();
          
            for (Palabra Palabra : this.dicc.Palabras) {
                    this.model.addElement(Palabra.getPalabra());
            } 
            this.listaPalabras.setSelectedIndex(index);
        }
    }//GEN-LAST:event_formWindowGainedFocus

    private void guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarActionPerformed
        // TODO add your handling code here:
    
        Seguro x;
        if(this.dicc!=null){
            if(dificultadFacil.isSelected()==true){
                x=new Seguro(this,true,dicc,"Facil");
                x.setVisible(true);
  
            }else if(dificultadMedio.isSelected()==true){
                x=new Seguro(this,true,dicc,"Normal");
                x.setVisible(true);
             }
            else{
                x=new Seguro(this,true,dicc,"Dificil");
                x.setVisible(true);
             }
            
       }
            
    }//GEN-LAST:event_guardarActionPerformed

    private void dificultadFacilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dificultadFacilActionPerformed
        // TODO add your handling code here:
        this.dicc=Diccionario.deserializarPalabras("Facil");
        cargarLista();
    }//GEN-LAST:event_dificultadFacilActionPerformed

    private void dificultadMedioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dificultadMedioActionPerformed
        // TODO add your handling code here:
        this.dicc=Diccionario.deserializarPalabras("Normal");
        cargarLista();
    }//GEN-LAST:event_dificultadMedioActionPerformed

    private void dificultadDificilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dificultadDificilActionPerformed
        // TODO add your handling code here:
        this.dicc=Diccionario.deserializarPalabras("Dificil");
        cargarLista();
    }//GEN-LAST:event_dificultadDificilActionPerformed

    /**
     * @param args the command line arguments
     */
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Agregar;
    private javax.swing.JButton Borrar;
    private javax.swing.JButton Modificar;
    private javax.swing.JToggleButton dificultadDificil;
    private javax.swing.JToggleButton dificultadFacil;
    private javax.swing.JToggleButton dificultadMedio;
    private javax.swing.ButtonGroup grupoDificultad;
    private javax.swing.JButton guardar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JList<String> listaPalabras;
    // End of variables declaration//GEN-END:variables
}
